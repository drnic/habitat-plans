groups:
- jobs:
  - build-docker
  - release-docker
  - build-postgresql
  - release-postgresql
  - build-shield-agent
  - release-shield-agent
  - build-shield
  - release-shield
  - test-postgresql
  - test-shield
  name: packages
- jobs:
  - build-habitat-plans-pipeline-image
  name: images
- jobs:
  - docker-machine-setup
  name: docker-machine-setup
jobs:
- name: build-habitat-plans-pipeline-image
  plan:
  - aggregate:
    - get: habitat-plans-pipeline
      trigger: true
    - get: habitat-release
      trigger: true
  - params:
      build: habitat-plans-pipeline/images/habitat-plans-pipeline
      tag: habitat-release/version
      tag_as_latest: true
    put: habitat-plans-pipeline-image
  public: true
- name: docker-machine-setup
  plan:
  - config:
      image: docker:///bodymindarts/docker-machine-setup
      params:
        AWS_ACCESS_KEY_ID: REDACTED
        AWS_BUCKET: docker-machine-exports
        AWS_DEFAULT_REGION: eu-central-1
        AWS_SECRET_ACCESS_KEY: REDACTED
        DIGITALOCEAN_ACCESS_TOKEN: REDACTED
        DIGITALOCEAN_REGION: fra1
        MACHINE_NAME: habitat-plans-pipeline-machine
      platform: linux
      run:
        path: /setup-digitalocean
    task: docker-machine-setup
  serial: true
- name: build-postgresql
  plan:
  - aggregate:
    - get: core-bash-pkg
      trigger: true
    - get: core-glibc-pkg
      trigger: true
    - get: core-libossp-uuid-pkg
      trigger: true
    - get: core-openssl-pkg
      trigger: true
    - get: core-perl-pkg
      trigger: true
    - get: core-readline-pkg
      trigger: true
    - get: core-zlib-pkg
      trigger: true
    - get: postgresql-plan
      trigger: true
    - get: habitat-plans-ci
  - config:
      image: docker:///starkandwayne/habitat-plans-pipeline
      inputs:
      - name: postgresql-plan
      - name: habitat-plans-ci
      outputs:
      - name: result
      params:
        HAB_ORIGIN: starkandwayne
        HAB_ORIGIN_KEY: REDACTED
        OUT: result
        PACKAGE_CONTEXT: postgresql-plan/postgresql
        PLAN_NAME: postgresql
      platform: linux
      run:
        path: ./habitat-plans-ci/ci/scripts/build
    privileged: true
    task: build-postgresql
  - aggregate:
    - params:
        load_file: result/starkandwayne-postgresql-docker.tar
        load_repository: starkandwayne/postgresql
        load_tag: habitat
        tag: result/docker_tag
      put: starkandwayne-postgresql-image
    - params:
        load_file: result/starkandwayne-postgresql-docker.tar
        load_repository: starkandwayne/postgresql
        load_tag: habitat
      put: starkandwayne-postgresql-edge-image
    - params:
        file: result/*.hart
      put: starkandwayne-postgresql-artifact
  public: true
- name: build-shield-agent
  plan:
  - aggregate:
    - get: core-busybox-static-pkg
      trigger: true
    - get: core-glibc-pkg
      trigger: true
    - get: shield-agent-plan
      trigger: true
    - get: habitat-plans-ci
  - config:
      image: docker:///starkandwayne/habitat-plans-pipeline
      inputs:
      - name: shield-agent-plan
      - name: habitat-plans-ci
      outputs:
      - name: result
      params:
        HAB_ORIGIN: starkandwayne
        HAB_ORIGIN_KEY: REDACTED
        OUT: result
        PACKAGE_CONTEXT: shield-agent-plan/shield-agent
        PLAN_NAME: shield-agent
      platform: linux
      run:
        path: ./habitat-plans-ci/ci/scripts/build
    privileged: true
    task: build-shield-agent
  - aggregate:
    - params:
        load_file: result/starkandwayne-shield-agent-docker.tar
        load_repository: starkandwayne/shield-agent
        load_tag: habitat
        tag: result/docker_tag
      put: starkandwayne-shield-agent-image
    - params:
        load_file: result/starkandwayne-shield-agent-docker.tar
        load_repository: starkandwayne/shield-agent
        load_tag: habitat
      put: starkandwayne-shield-agent-edge-image
    - params:
        file: result/*.hart
      put: starkandwayne-shield-agent-artifact
  public: true
- name: build-shield
  plan:
  - aggregate:
    - get: core-busybox-static-pkg
      trigger: true
    - get: core-glibc-pkg
      trigger: true
    - get: starkandwayne-postgresql-pkg
      trigger: true
    - get: shield-plan
      trigger: true
    - get: habitat-plans-ci
  - config:
      image: docker:///starkandwayne/habitat-plans-pipeline
      inputs:
      - name: shield-plan
      - name: habitat-plans-ci
      outputs:
      - name: result
      params:
        HAB_ORIGIN: starkandwayne
        HAB_ORIGIN_KEY: REDACTED
        OUT: result
        PACKAGE_CONTEXT: shield-plan/shield
        PLAN_NAME: shield
      platform: linux
      run:
        path: ./habitat-plans-ci/ci/scripts/build
    privileged: true
    task: build-shield
  - aggregate:
    - params:
        load_file: result/starkandwayne-shield-docker.tar
        load_repository: starkandwayne/shield
        load_tag: habitat
        tag: result/docker_tag
      put: starkandwayne-shield-image
    - params:
        load_file: result/starkandwayne-shield-docker.tar
        load_repository: starkandwayne/shield
        load_tag: habitat
      put: starkandwayne-shield-edge-image
    - params:
        file: result/*.hart
      put: starkandwayne-shield-artifact
  public: true
- name: build-docker
  plan:
  - aggregate:
    - get: docker-plan
      trigger: true
    - get: habitat-plans-ci
  - config:
      image: docker:///starkandwayne/habitat-plans-pipeline
      inputs:
      - name: docker-plan
      - name: habitat-plans-ci
      outputs:
      - name: result
      params:
        HAB_ORIGIN: starkandwayne
        HAB_ORIGIN_KEY: REDACTED
        OUT: result
        PACKAGE_CONTEXT: docker-plan/docker
        PLAN_NAME: docker
      platform: linux
      run:
        path: ./habitat-plans-ci/ci/scripts/build
    privileged: true
    task: build-docker
  - aggregate:
    - params:
        load_file: result/starkandwayne-docker-docker.tar
        load_repository: starkandwayne/docker
        load_tag: habitat
        tag: result/docker_tag
      put: starkandwayne-docker-image
    - params:
        load_file: result/starkandwayne-docker-docker.tar
        load_repository: starkandwayne/docker
        load_tag: habitat
      put: starkandwayne-docker-edge-image
    - params:
        file: result/*.hart
      put: starkandwayne-docker-artifact
  public: true
- name: release-docker
  plan:
  - aggregate:
    - get: starkandwayne-docker-artifact
      passed:
      - build-docker
    - get: starkandwayne-docker-image
      params:
        save: true
      passed:
      - build-docker
  - aggregate:
    - params:
        load: starkandwayne-docker-image
        tag_as_latest: true
      put: starkandwayne-docker-image
    - params:
        result: starkandwayne-docker-artifact
      put: starkandwayne-docker-pkg
  public: true
- name: release-postgresql
  plan:
  - aggregate:
    - get: starkandwayne-postgresql-artifact
      passed:
      - test-postgresql
    - get: starkandwayne-postgresql-image
      params:
        save: true
      passed:
      - test-postgresql
  - aggregate:
    - params:
        load: starkandwayne-postgresql-image
        tag_as_latest: true
      put: starkandwayne-postgresql-image
    - params:
        result: starkandwayne-postgresql-artifact
      put: starkandwayne-postgresql-pkg
  public: true
- name: release-shield-agent
  plan:
  - aggregate:
    - get: starkandwayne-shield-agent-artifact
      passed:
      - build-shield-agent
    - get: starkandwayne-shield-agent-image
      params:
        save: true
      passed:
      - build-shield-agent
  - aggregate:
    - params:
        load: starkandwayne-shield-agent-image
        tag_as_latest: true
      put: starkandwayne-shield-agent-image
    - params:
        result: starkandwayne-shield-agent-artifact
      put: starkandwayne-shield-agent-pkg
  public: true
- name: release-shield
  plan:
  - aggregate:
    - get: starkandwayne-shield-artifact
      passed:
      - test-shield
    - get: starkandwayne-shield-image
      params:
        save: true
      passed:
      - test-shield
  - aggregate:
    - params:
        load: starkandwayne-shield-image
        tag_as_latest: true
      put: starkandwayne-shield-image
    - params:
        result: starkandwayne-shield-artifact
      put: starkandwayne-shield-pkg
  public: true
- name: test-postgresql
  plan:
  - aggregate:
    - get: starkandwayne-postgresql-edge-image
      params:
        skip_download: true
      passed:
      - build-postgresql
      trigger: true
    - get: postgresql-tests
      trigger: true
    - get: starkandwayne-postgresql-artifact
      passed:
      - build-postgresql
    - get: starkandwayne-postgresql-image
      params:
        skip_download: true
      passed:
      - build-postgresql
  - config:
      image: docker:///bodymindarts/delmo-concourse
      inputs:
      - name: postgresql-tests
      params:
        MACHINE_EXPORT_AWS_ACCESS_KEY_ID: REDACTED
        MACHINE_EXPORT_AWS_BUCKET: docker-machine-exports
        MACHINE_EXPORT_AWS_REGION: eu-central-1
        MACHINE_EXPORT_AWS_SECRET_ACCESS_KEY: REDACTED
        MACHINE_NAME: habitat-plans-pipeline-machine
      platform: linux
      run:
        args:
        - delmo
        - --only-build-task
        - -f
        - postgresql-tests/postgresql/tests/delmo.yml
        - -m
        - habitat-plans-pipeline-machine
        path: /entrypoint.sh
    task: test-postgresql
  public: true
  serial: true
  serial_group:
  - delmo
- name: test-shield
  plan:
  - aggregate:
    - get: starkandwayne-shield-edge-image
      params:
        skip_download: true
      passed:
      - build-shield
      trigger: true
    - get: shield-tests
      trigger: true
    - get: starkandwayne-shield-artifact
      passed:
      - build-shield
    - get: starkandwayne-shield-image
      params:
        skip_download: true
      passed:
      - build-shield
  - config:
      image: docker:///bodymindarts/delmo-concourse
      inputs:
      - name: shield-tests
      params:
        MACHINE_EXPORT_AWS_ACCESS_KEY_ID: REDACTED
        MACHINE_EXPORT_AWS_BUCKET: docker-machine-exports
        MACHINE_EXPORT_AWS_REGION: eu-central-1
        MACHINE_EXPORT_AWS_SECRET_ACCESS_KEY: REDACTED
        MACHINE_NAME: habitat-plans-pipeline-machine
      platform: linux
      run:
        args:
        - delmo
        - --only-build-task
        - -f
        - shield-tests/shield/tests/delmo.yml
        - -m
        - habitat-plans-pipeline-machine
        path: /entrypoint.sh
    task: test-shield
  public: true
  serial: true
  serial_group:
  - delmo
resource_types:
- name: hab-pkg
  source:
    repository: starkandwayne/habitat-resource
  type: docker-image
resources:
- name: habitat-plans-pipeline
  source:
    paths:
    - images/habitat-plans-pipeline/*
    uri: https://github.com/starkandwayne/habitat-plans.git
  type: git
- name: habitat-plans-ci
  source:
    paths:
    - ci/*
    uri: https://github.com/starkandwayne/habitat-plans.git
  type: git
- name: habitat-release
  source:
    repository: habitat
    user: habitat-sh
  type: github-release
- name: habitat-plans-pipeline-image
  source:
    email: REDACTED
    password: REDACTED
    repository: starkandwayne/habitat-plans-pipeline
    username: REDACTED
  type: docker-image
- name: core-bash-pkg
  source:
    name: bash
    origin: core
  type: hab-pkg
- name: core-glibc-pkg
  source:
    name: glibc
    origin: core
  type: hab-pkg
- name: core-libossp-uuid-pkg
  source:
    name: libossp-uuid
    origin: core
  type: hab-pkg
- name: core-openssl-pkg
  source:
    name: openssl
    origin: core
  type: hab-pkg
- name: core-perl-pkg
  source:
    name: perl
    origin: core
  type: hab-pkg
- name: core-readline-pkg
  source:
    name: readline
    origin: core
  type: hab-pkg
- name: core-zlib-pkg
  source:
    name: zlib
    origin: core
  type: hab-pkg
- name: core-busybox-static-pkg
  source:
    name: busybox-static
    origin: core
  type: hab-pkg
- name: starkandwayne-postgresql-pkg
  source:
    auth_token: REDACTED
    name: postgresql
    origin: starkandwayne
  type: hab-pkg
- name: starkandwayne-docker-pkg
  source:
    auth_token: REDACTED
    name: docker
    origin: starkandwayne
  type: hab-pkg
- name: docker-plan
  source:
    ignore_paths:
    - docker/tests/*
    paths:
    - docker/*
    uri: https://github.com/starkandwayne/habitat-plans.git
  type: git
- name: starkandwayne-docker-image
  source:
    email: REDACTED
    password: REDACTED
    repository: starkandwayne/docker
    username: REDACTED
  type: docker-image
- name: starkandwayne-docker-edge-image
  source:
    email: REDACTED
    password: REDACTED
    repository: starkandwayne/docker
    tag: edge
    username: REDACTED
  type: docker-image
- name: starkandwayne-docker-artifact
  source:
    access_key_id: REDACTED
    bucket: snw-habitat-packages
    regexp: starkandwayne-docker/starkandwayne-docker-(.*)-x86_64-linux.hart
    region_name: eu-central-1
    secret_access_key: REDACTED
  type: s3
- name: postgresql-plan
  source:
    ignore_paths:
    - postgresql/tests/*
    paths:
    - postgresql/*
    uri: https://github.com/starkandwayne/habitat-plans.git
  type: git
- name: starkandwayne-postgresql-image
  source:
    email: REDACTED
    password: REDACTED
    repository: starkandwayne/postgresql
    username: REDACTED
  type: docker-image
- name: starkandwayne-postgresql-edge-image
  source:
    email: REDACTED
    password: REDACTED
    repository: starkandwayne/postgresql
    tag: edge
    username: REDACTED
  type: docker-image
- name: starkandwayne-postgresql-artifact
  source:
    access_key_id: REDACTED
    bucket: snw-habitat-packages
    regexp: starkandwayne-postgresql/starkandwayne-postgresql-(.*)-x86_64-linux.hart
    region_name: eu-central-1
    secret_access_key: REDACTED
  type: s3
- name: starkandwayne-shield-agent-pkg
  source:
    auth_token: REDACTED
    name: shield-agent
    origin: starkandwayne
  type: hab-pkg
- name: shield-agent-plan
  source:
    ignore_paths:
    - shield-agent/tests/*
    paths:
    - shield-agent/*
    uri: https://github.com/starkandwayne/habitat-plans.git
  type: git
- name: starkandwayne-shield-agent-image
  source:
    email: REDACTED
    password: REDACTED
    repository: starkandwayne/shield-agent
    username: REDACTED
  type: docker-image
- name: starkandwayne-shield-agent-edge-image
  source:
    email: REDACTED
    password: REDACTED
    repository: starkandwayne/shield-agent
    tag: edge
    username: REDACTED
  type: docker-image
- name: starkandwayne-shield-agent-artifact
  source:
    access_key_id: REDACTED
    bucket: snw-habitat-packages
    regexp: starkandwayne-shield-agent/starkandwayne-shield-agent-(.*)-x86_64-linux.hart
    region_name: eu-central-1
    secret_access_key: REDACTED
  type: s3
- name: starkandwayne-shield-pkg
  source:
    auth_token: REDACTED
    name: shield
    origin: starkandwayne
  type: hab-pkg
- name: shield-plan
  source:
    ignore_paths:
    - shield/tests/*
    paths:
    - shield/*
    uri: https://github.com/starkandwayne/habitat-plans.git
  type: git
- name: starkandwayne-shield-image
  source:
    email: REDACTED
    password: REDACTED
    repository: starkandwayne/shield
    username: REDACTED
  type: docker-image
- name: starkandwayne-shield-edge-image
  source:
    email: REDACTED
    password: REDACTED
    repository: starkandwayne/shield
    tag: edge
    username: REDACTED
  type: docker-image
- name: starkandwayne-shield-artifact
  source:
    access_key_id: REDACTED
    bucket: snw-habitat-packages
    regexp: starkandwayne-shield/starkandwayne-shield-(.*)-x86_64-linux.hart
    region_name: eu-central-1
    secret_access_key: REDACTED
  type: s3
- name: postgresql-tests
  source:
    paths:
    - postgresql/tests/*
    uri: https://github.com/starkandwayne/habitat-plans.git
  type: git
- name: shield-tests
  source:
    paths:
    - shield/tests/*
    uri: https://github.com/starkandwayne/habitat-plans.git
  type: git

